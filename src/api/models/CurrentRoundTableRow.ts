/* tslint:disable */
/* eslint-disable */
/**
 * Guess The Number API
 * API for Guess The Number game
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CurrentRoundTableRow
 */
export interface CurrentRoundTableRow {
    /**
     * The name of the player
     * @type {string}
     * @memberof CurrentRoundTableRow
     */
    name?: string;
    /**
     * The number of points scored by the player in the current round
     * @type {number}
     * @memberof CurrentRoundTableRow
     */
    point?: number;
    /**
     * The multiplier value used for calculating the player's score
     * @type {number}
     * @memberof CurrentRoundTableRow
     */
    multiplier?: number;
}

/**
 * Check if a given object implements the CurrentRoundTableRow interface.
 */
export function instanceOfCurrentRoundTableRow(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CurrentRoundTableRowFromJSON(json: any): CurrentRoundTableRow {
    return CurrentRoundTableRowFromJSONTyped(json, false);
}

export function CurrentRoundTableRowFromJSONTyped(json: any, ignoreDiscriminator: boolean): CurrentRoundTableRow {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'point': !exists(json, 'point') ? undefined : json['point'],
        'multiplier': !exists(json, 'multiplier') ? undefined : json['multiplier'],
    };
}

export function CurrentRoundTableRowToJSON(value?: CurrentRoundTableRow | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'point': value.point,
        'multiplier': value.multiplier,
    };
}

